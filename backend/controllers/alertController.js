// controllers/alertController.js
const Alert = require('../models/Alert');
const AlertService = require('../services/alertService');

exports.getAlerts = async (req, res) => {
  try {
    const { status, type, severity, entityType, limit } = req.query;
    
    const alerts = await Alert.getAlerts({
      status,
      type,
      severity,
      entityType,
      limit: limit ? parseInt(limit) : 50
    });
    
    res.status(200).json({
      success: true,
      data: alerts,
      count: alerts.length
    });
  } catch (error) {
    console.error('Error getting alerts:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};

exports.getAlert = async (req, res) => {
  try {
    const { id } = req.params;
    const alert = await Alert.get(id);
    
    if (!alert) {
      return res.status(404).json({
        success: false,
        message: 'Alert not found'
      });
    }
    
    res.status(200).json({
      success: true,
      data: alert
    });
  } catch (error) {
    console.error('Error getting alert:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};

exports.acknowledgeAlert = async (req, res) => {
  try {
    const { id } = req.params;
    const userId = req.user.uid;
    
    const alert = await Alert.get(id);
    if (!alert) {
      return res.status(404).json({
        success: false,
        message: 'Alert not found'
      });
    }
    
    const updatedAlert = await Alert.acknowledge(id, userId);
    
    res.status(200).json({
      success: true,
      message: 'Alert acknowledged',
      data: updatedAlert
    });
  } catch (error) {
    console.error('Error acknowledging alert:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};

exports.resolveAlert = async (req, res) => {
  try {
    const { id } = req.params;
    const userId = req.user.uid;
    
    const alert = await Alert.get(id);
    if (!alert) {
      return res.status(404).json({
        success: false,
        message: 'Alert not found'
      });
    }
    
    const updatedAlert = await Alert.resolve(id, userId);
    
    res.status(200).json({
      success: true,
      message: 'Alert resolved',
      data: updatedAlert
    });
  } catch (error) {
    console.error('Error resolving alert:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};

exports.getAlertStats = async (req, res) => {
  try {
    const stats = await Alert.getStats();
    
    res.status(200).json({
      success: true,
      data: stats
    });
  } catch (error) {
    console.error('Error getting alert stats:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};

exports.triggerTestAlert = async (req, res) => {
  try {
    const { type, severity } = req.body;
    
    const alert = await AlertService.triggerAlert({
      type: type || 'test',
      severity: severity || 'medium',
      title: 'Test Alert',
      description: 'This is a test alert generated by the system',
      entityType: 'system',
      entityId: 'test',
      metadata: { test: true }
    });
    
    res.status(200).json({
      success: true,
      message: 'Test alert triggered',
      data: alert
    });
  } catch (error) {
    console.error('Error triggering test alert:', error);
    res.status(500).json({
      success: false,
      message: 'Internal server error',
      error: error.message
    });
  }
};
